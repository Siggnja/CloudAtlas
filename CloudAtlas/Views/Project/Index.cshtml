@model CloudAtlas.Models.ProjectViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="project-container">
    <div class="main">
        <div class="actions">
            <div class="filename">
                index.js
            </div>

            <div class="last-saved">
                saved 5 mins ago
            </div>
        </div>
        <div id="editor" style="width: 100%; height:100%;"></div> 
        <div> 
            <input type="hidden" id="hiddencode" name="hiddencode" />
            <input type="hidden" id="hiddenid" name="hiddenid" /> 
            <input type="hidden" id="hiddenproject" name="hiddenproject" value="@Model.Project.ID" /> 
            <input type="hidden" id="hiddentype" name="hiddentype" /> 
            <input type="hidden" id="hiddentheme" name="hiddentheme" value="@Model.User.Theme"/> 
        </div>
    </div>

    <div class="left">
        
        <h3>@Model.Project.Name</h3>
        <div id="jstree">
            <!-- in this example the tree is populated from inline HTML -->
            <ul>
                <li class="jstree-open" id="node_1" data-jstree='{"folderid":"@Model.Root.ID"}'>
                </li>
            </ul>
            <div id="CreateFileForm"></div>
        </div>
    </div>


    <div class="right">
        <h3>Collaborators</h3>

        <div class="collaborators">

            <div class="avatars">
                <div class="user-img">
                    <img src="https://platform-static-files.s3.amazonaws.com/premierleague/photos/players/250x250/p37265.png" />
                </div>

                <div class="user-img">
                    <img src="https://platform-static-files.s3.amazonaws.com/premierleague/photos/players/250x250/p37265.png" />
                </div>

                <div class="user-img">
                    <img src="https://platform-static-files.s3.amazonaws.com/premierleague/photos/players/250x250/p37265.png" />
                </div>

                <div class="user-img">
                    <img src="https://platform-static-files.s3.amazonaws.com/premierleague/photos/players/250x250/p37265.png" />
                </div>
            </div>
            

            @using (Html.BeginForm("Invite", "Project", FormMethod.Post, htmlAttributes: new { id = "inviteForm" }))
            {
                @Html.TextBox("UserEmail", null, htmlAttributes: new { id = "searchInvite" })
                <!--<input type="submit" id="submitInvite" />-->
                <input type="hidden" id="hiddenproject" name="hiddenproject" value="@Model.Project.ID" />
                <input type="submit" value="Invite" />
            }
        </div>

        <h3>Chat</h3>

        <div class="messages">
            <div class="message-chat">
                <ul id="discussion"></ul>
            </div>

            <div class="message-box">
                <input type="text" id="message" />
                <input style="visibility: hidden" type="button" id="sendmessage" value="Send" />
                <input type="hidden" id="displayname" value="@Model.User.UserName" />
            </div>
        </div>
    </div>
</div>



@section scripts {
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>

    <script>
        $(function () {

            // Ace functions
            var editor = ace.edit("editor");
            editor.setShowPrintMargin(false);
            var theme = "ace/theme/" + $('#hiddentheme').val();
            editor.setTheme(theme);
            editor.getSession().setMode("ace/mode/c_cpp");


            // Hub functions
            var chat = $.connection.chatHub;

            editor.$blockScrolling = Infinity;

            var ignore;

            chat.client.updateEditor = function (changedata) {
                ignore = true;
                editor.getSession().getDocument().applyDelta(changedata);
                ignore = false;
                var line = Number(changedata.start.row) + 1;
                var userediting = "#editingline" + "Siggi";
                $(userediting).stop(false).text("Line: " + line).show().animate({ opacity: '100' }).fadeOut(1000);
            };

            chat.client.chatMessage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };


            // Hub
            $.connection.hub.start().done(function () {

                chat.server.joinChat($('#hiddenproject').val());

                // Change is detected and editor is updated.
                editor.on("change", function (obj) {
                    if (!ignore) {
                        $.ajax({
                            url: '/Project/SaveFileAuto',
                            dataType: 'json',
                            data: { code: editor.getValue(), id: $('#hiddenid').val(), projectid: $('#hiddenproject').val() },
                            method: 'POST'
                        });
                        chat.server.updateEditor(obj, $('#hiddenid').val());
                    }
                });

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.chatMessage($('#displayname').val(), $('#message').val(), $('#hiddenproject').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

            });


            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }

            $('#message').keypress(function (e) {
                if (e.keyCode == 13)
                    $('#sendmessage').click();
            });

            var tree = $('#jstree');
            // 6 create an instance when the DOM is ready
            tree.jstree({
                "plugins": ["themes", "contextmenu", "dnd", "types", "state"],
                "core": {
                    check_callback: true,
                    "data": {
                        'url': "/Project/InitilizeTree/@Model.Project.ID",
                        'data': function (node) {
                        }
                    }
                },
                "types": {
                    "folder": {
                        "icon": "fa fa-folder",
                        "valid_children": ["default"]
                    },
                    "default": {
                        "valid_children": ["default", "file"]
                    },
                    "file": {
                        "icon": "fa fa-file-text-o",
                        "valid_children": []
                    }
                },
                "contextmenu": {
                    "items": function (node) {
                        return {
                            "rename": {
                                label: "Rename",
                                action: function (obj) {
                                    tree.jstree(true).edit(node);
                                }
                            },
                            "create": {
                                action: false,
                                label: "Create",
                                action: false,
                                submenu: {
                                    "create file":
                                    {
                                        "seperator_before": false,
                                        "seperator_after": false,
                                        "label": "File",
                                        action: function (obj) {
                                            window.confirm();
                                            $("#CreateFileForm").dialog({
                                                autoOpen: true,
                                                position: { my: "center", at: "top+350", of: window },
                                                width: 1000,
                                                resizable: false,
                                                title: 'Add File',
                                                modal: true,
                                                open: function () {
                                                    $(this).load('@Url.Action("CreateFileInput", "Project")');
                                                },
                                                buttons: {
                                                    "Add file": function () {
                                                        CreateFileInfo();
                                                    },
                                                    Cancel: function () {
                                                        $(this).dialog("close");
                                                    }
                                                }
                                            });
                                            return false;
                                        }
                                    },
                                    "create_folder": {
                                        "seperator_before": false,
                                        "seperator_after": false,
                                        "label": "Folder",
                                        action: function (obj) {
                                            var fid = node.id;
                                            tree.jstree(true).create_node(node, fid, "last", false, false);
                                        }
                                    }
                                }
                            },
                            "delete": {
                                label: "Delete",
                                action: function () {
                                    tree.jstree(true).delete_node(node);
                                },
                                separator_before: true
                            }
                        }
                    }
                }
            });

            $("#jstree").on("create_node.jstree", function (event, data)
            {
                console.log("Event:");
                console.log(event);
                console.log("Data");
                console.log(data);
                if (data.node.type === "file")
                {
                        $("#CreateFileForm").dialog({
                        autoOpen: true,
                        position: { my: "center", at: "top+350", of: window },
                        width: 1000,
                        resizable: false,
                        title: 'Add File',
                        modal: true,
                        open: function () {
                            $(this).load('@Url.Action("CreateFileInput", "Project")');
                        },
                        buttons: {
                            "Add file": function () {
                                CreateFileInfo();
                            },
                            Cancel: function () {
                                $(this).dialog("close");
                            }
                        }
                    });
                    return false;

                }
                else {
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        cache: false,
                        url: '/Project/CreateFolder',
                        data: { parentId: data.parent, projectId: @Model.Project.ID},
                        success: function (response) {
                            console.log("in here");
                            tree.jstree(true).settings.core.data = response;
                            tree.jstree(true).refresh();
                        },
                        error: function (response) {
                            tree.jstree(true).refresh();
                        }
                    });
                }
            });

            function CreateFileInfo(id)
            {
                $.ajax({
                    url: '@Url.Action("CreateFile", "Project")',
                    type: 'POST',
                    data: $("#myForm").serialize() + "&parentId=id&projectId=@Model.Project.ID",
                    success: function(data) {
                        if (data) {
                            $(':input', '#myForm')
                              .not(':button, :submit, :reset, :hidden')
                              .val('')
                              .removeAttr('checked')
                              .removeAttr('selected');
                        }
                        tree.jstree(true).refresh();
                    }
                });
            }
            $("#jstree").on("rename_node.jstree", function (event, data)
            {
                var fid = data.node.id;
                if (data.node.type === "file")
                {
                    var name = data.node.text;
                    if (data.node.text.indexOf('.') != -1)
                    {
                        name = data.node.text.substring(0, data.text.indexOf('.'));
                    }
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        cache: false,
                        url: '/Project/RenameFile',
                        data: { id: fid, newName: name, projectId: @Model.Project.ID},
                        success: function (response)
                        {
                            tree.jstree(true).settings.core.data = response;
                            tree.jstree(true).refresh();
                        }

                    });
                }
                else
                {
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        cache: false,
                        url: '/Project/RenameFolder',
                        data: { id: fid, newName: data.node.text, projectId: @Model.Project.ID}
                    });
                }

            });
            $("#jstree").on("delete_node.jstree", function (event, data)
            {
                var fid = data.node.id;
                if (data.node.type === "file")
                {

                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        cache: false,
                        url: '/Project/RemoveFile',
                        data: { id: fid,projectId: @Model.Project.ID}
                    });
                }
                else
                {
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        cache: false,
                        url: '/Project/RemoveFolder',
                        data: { id: fid, projectId: @Model.Project.ID},
                        success: function (response, textStatus, jqXHR)
                        {

                        }
                    });
                }

            });

            // 7 bind to events triggered on the tree
            $('#jstree').on("select_node.jstree", function (e, data)
            {
                if ("undefined" === typeof data)
                {
                    return;
                }
                if (data.node.type === "file")
                {
                    var fid = data.node.id;
                    $.ajax({
                        type: 'get',
                        dataType: 'json',
                        cache: false,
                        url: '/Project/OpenFile',
                        data: { id: fid },
                        success: function (response, textStatus, jqXHR) {
                            chat.server.switchFile($('#hiddenid').val(), fid);
                            $('#hiddenid').val(fid);
                            ignore = true;
                            editor.setValue(response.content, 1);
                            $('#hiddencode').val(response.content);
                            $('#hiddentype').val(response.type);
                            var syntax = "ace/mode/" + $('#hiddentype').val();
                            editor.getSession().setMode(syntax);
                            ignore = false;
                        }
                    });
                }
                else
                {
                   // console.log('folder');
                }
            });


            $("#inviteForm").on('submit', function () {
                var form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    data: form.serialize(),
                    method: 'POST'
                });

                return false;
            });


            $("#searchInvite").autocomplete({
                source: '@Url.Action("Search", "Project")'
            });

        });

    </script>
}
