@model CloudAtlas.Models.ProjectViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="project-container">
    <div class="main">
        <div id="editor" style="width: 100%; height:100%;">
@Model.Files[0].Content;
        </div>
    </div>

    <div class="left-sidebar">
        <h3>@Model.Project.Name;</h3>

        <div id="jstree">
            <!-- in this example the tree is populated from inline HTML -->
            <ul>
                <li class="jstree-open" id="node_1">
                    @Model.Root.Name;
                    <ul>
                        @foreach(var fold in @Model.Folders)
                        {
                            <li>@fold.Name;</li>
                        }
                        @foreach (var file in @Model.Files)
                        {
                            <li data-jstree='{"icon":"//jstree.com/tree.png"}'>
                                @file.Name;
                            </li>
                        }
                    </ul>
                </li>
            </ul>
        </div>
    </div>

    <div class="right-sidebar">
        <h3>Collaborators</h3>

        <div class="collaborators">
            <div class="user">
                <img src="#" alt="" />
            </div>
        </div>

        <h3>Chat</h3>
    
        <div class="messages">
            <div class="message-chat">
                <ul id="discussion">

                </ul>
            </div>

            <div class="message-box">
                <input type="text" id="message" />
                <input type="button" id="sendmessage" value="Send" />
                <input type="hidden" id="displayname" value="@ViewData["UserEmail"]"/>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/ace.js" type="text/javascript" charset="utf-8"></script>
<script>
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/monokai");
    editor.getSession().setMode("ace/mode/c_cpp");

    $(document).ready(function () {
        $('#message').keypress(function (e) {
            if (e.keyCode == 13)
                $('#sendmessage').click();
        });
    });

    $(function () {
        // 6 create an instance when the DOM is ready
        $('#jstree').jstree();
        // 7 bind to events triggered on the tree
        $('#jstree').on("changed.jstree", function (e, data) {
            console.log(data.selected);
        });
        // 8 interact with the tree - either way is OK
        $('button').on('click', function () {
            $('#jstree').jstree(true).select_node('child_node_1');
            $('#jstree').jstree('select_node', 'child_node_1');
            $.jstree.reference('#jstree').select_node('child_node_1');
        });

    });
</script>

@section scripts {
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>

    <script>
        $(function () {
            // Reference the hub
            var chat = $.connection.chatHub;
            editor.$blockScrolling = Infinity;

            var ignore;

            chat.client.updateEditor = function (changedata) {
                ignore = true;
                editor.getSession().getDocument().applyDelta(changedata);
                ignore = false;
            };

            chat.client.chatMessage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
                console.log(message);
            };

            
            // Hub
            $.connection.hub.start().done(function () {

                // Change is detected and editor is updated.
                editor.on("change", function (obj) {
                    if (!ignore)
                    {
                        chat.server.updateEditor(obj);
                    }
                });

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.chatMessage($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

            });
        });

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

    </script>
}
