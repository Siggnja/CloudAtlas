@model CloudAtlas.Models.ProjectViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<div class="project-container">
    <div class="main">
        <div id="editor" style="width: 100%; height:100%;">

        </div>
        @using (Html.BeginForm("SaveFile", "Project", FormMethod.Post, new { id = "ace-form" }))
        {
            <input type="hidden" id="hiddencode" name="hiddencode"  />
            <input type="hidden" id="hiddenid" name="hiddenid"  />
            <input type="hidden" id="hiddenproject" name="hiddenproject" value="@Model.Project.ID"/>
            <button type="submit">Save</button>
        }
        <p id="saved" style="display: none;">Saved!</p>
    </div>

    <div class="left-sidebar">
        <h3>@Model.Project.Name</h3>
        <div id="jstree">
            <!-- in this example the tree is populated from inline HTML -->
            <ul>
                <li class="jstree-open" id="node_1" data-jstree='{"folderid":"@Model.Root.ID"}'>
                </li>
            </ul>
            <div id="CreateFileForm"></div>
        </div>
    </div>

    <div class="right-sidebar">
        <h3>Collaborators</h3>

        <div class="collaborators">
            <div class="user-img">
                <img src="https://scontent-lhr3-1.xx.fbcdn.net/v/t1.0-9/1554494_10202480640245651_7477605474618443507_n.jpg?oh=32dfb7eb5346ac6762711cd7ed1c32af&oe=5980ABF8" alt="" />
            </div>

            <div class="user-img">
                <img src="https://scontent-lhr3-1.xx.fbcdn.net/v/t1.0-9/1554494_10202480640245651_7477605474618443507_n.jpg?oh=32dfb7eb5346ac6762711cd7ed1c32af&oe=5980ABF8" alt="" />
            </div>

            <div class="user-img">
                <img src="https://scontent-lhr3-1.xx.fbcdn.net/v/t1.0-9/1554494_10202480640245651_7477605474618443507_n.jpg?oh=32dfb7eb5346ac6762711cd7ed1c32af&oe=5980ABF8" alt="" />
            </div>

            <div class="user-img">
                <i class="fa fa-plus-circle fa-5x" aria-hidden="true"></i>
            </div>
        </div>

        <h3>Chat</h3>
    
        <div class="messages">
            <div class="message-chat">
                <ul id="discussion">

                </ul>
            </div>

            <div class="message-box">
                <input type="text" id="message" />
                <input type="button" id="sendmessage" value="Send" />
                <input type="hidden" id="displayname" value="@ViewData["UserEmail"]"/>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/ace.js" type="text/javascript" charset="utf-8"></script>

<script>
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/monokai");
    editor.getSession().setMode("ace/mode/c_cpp");

    $(document).ready(function () {
        $('#message').keypress(function (e) {
            if (e.keyCode == 13)
                $('#sendmessage').click();
        });
    });
    $(function () {
        var tree = $('#jstree');
        // 6 create an instance when the DOM is ready
        tree.jstree({
            "plugins": ["themes", "contextmenu", "dnd","types","state"],
            "core": {
                check_callback: true,
                "data": {
                    'url': "/Project/InitilizeTree/@Model.Project.ID",
                    'data': function (node)
                    {
                    }
                }
            },
            "types": {
                "folder": {
                    "icon": "fa fa-folder",
                    "valid_children": ["default"]
                },
                "default": {
                    "valid_children": ["default", "file"]
                },
                "file": {
                    "icon": "fa fa-file-text-o",
                    "valid_children": []
                }
            },
            "contextmenu": {
                "items": function (node) {
                    return {
                        "rename": {
                            label: "Rename",
                            action: function (obj) {
                                tree.jstree(true).edit(node);
                            }
                        },
                        "create": {
                            action: false,
                            label: "Create",
                            action: false,
                            submenu: {
                                "create file":
                                {
                                    "seperator_before": false,
                                    "seperator_after": false,
                                    "label": "File",
                                    action: function (obj)
                                    {
                                        window.confirm();
                                        $("#CreateFileForm").dialog({
                                            autoOpen: true,
                                            position: { my: "center", at: "top+350", of: window },
                                            width: 1000,
                                            resizable: false,
                                            title: 'Add File',
                                            modal: true,
                                            open: function () {
                                                $(this).load('@Url.Action("CreateFileInput", "Project")');
                                            },
                                            buttons: {
                                                "Add file": function () {
                                                    CreateFileInfo();
                                                },
                                                Cancel: function () {
                                                    $(this).dialog("close");
                                                }
                                            }
                                    });
                                    return false;
                                    }
                                },
                                "create_folder": {
                                    "seperator_before": false,
                                    "seperator_after": false,
                                    "label": "Folder",
                                    action: function (obj) {
                                        var fid = node.id;
                                        tree.jstree(true).create_node(node, fid, "last", false, false);
                                    }
                                }
                            }
                        },
                        "delete": {
                            label: "Delete",
                            action: function () {
                                tree.jstree(true).delete_node(node);
                            },
                            separator_before: true
                        }
                    }
                }
            }
        });

        $("#jstree").on("create_node.jstree", function (event, data)
        {
            console.log("Event:");
            console.log(event);
            console.log("Data");
            console.log(data);
            if (data.node.type === "file")
            {
                    $("#CreateFileForm").dialog({
                    autoOpen: true,
                    position: { my: "center", at: "top+350", of: window },
                    width: 1000,
                    resizable: false,
                    title: 'Add File',
                    modal: true,
                    open: function () {
                        $(this).load('@Url.Action("CreateFileInput", "Project")');
                    },
                    buttons: {
                        "Add file": function () {
                            CreateFileInfo();
                        },
                        Cancel: function () {
                            $(this).dialog("close");
                        }
                    }
                });
                return false;

            }
            else {
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    cache: false,
                    url: '/Project/CreateFolder',
                    data: { parentId: data.parent, projectId: @Model.Project.ID},
                    success: function (response) {
                        console.log("in here");
                        tree.jstree(true).settings.core.data = response;
                        tree.jstree(true).refresh();
                    },
                    error: function (response) {
                        tree.jstree(true).refresh();
                    }
                });
            }
        });

        function CreateFileInfo(id)
        {
            $.ajax({
                url: '@Url.Action("CreateFile", "Project")',
                type: 'POST',
                data: $("#myForm").serialize() + "&parentId=id&projectId=@Model.Project.ID",
                success: function(data) {
                    if (data) {
                        $(':input', '#myForm')
                          .not(':button, :submit, :reset, :hidden')
                          .val('')
                          .removeAttr('checked')
                          .removeAttr('selected');
                    }
                    tree.jstree(true).refresh();
                }
            });
        }
        $("#jstree").on("rename_node.jstree", function (event, data)
        {
            var fid = data.node.id;
            if (data.node.type === "file")
            {
                var name = data.node.text;
                if (data.node.text.indexOf('.') != -1)
                {
                    name = data.node.text.substring(0, data.text.indexOf('.'));
                }
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    cache: false,
                    url: '/Project/RenameFile',
                    data: { id: fid, newName: name, projectId: @Model.Project.ID},
                    success: function (response)
                    {
                        tree.jstree(true).settings.core.data = response;
                        tree.jstree(true).refresh();
                    }

                });
            }
            else
            {
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    cache: false,
                    url: '/Project/RenameFolder',
                    data: { id: fid, newName: data.node.text, projectId: @Model.Project.ID}
                });
            }

        });
        $("#jstree").on("delete_node.jstree", function (event, data)
        {
            var fid = data.node.id;
            if (data.node.type === "file")
            {

                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    cache: false,
                    url: '/Project/RemoveFile',
                    data: { id: fid,projectId: @Model.Project.ID}
                });
            }
            else
            {
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    cache: false,
                    url: '/Project/RemoveFolder',
                    data: { id: fid, projectId: @Model.Project.ID},
                    success: function (response, textStatus, jqXHR)
                    {

                    }
                });
            }

        });

        // 7 bind to events triggered on the tree
        $('#jstree').on("select_node.jstree", function (e, data)
        {
            if ("undefined" === typeof data)
            {
                return;
            }
            if (data.node.type === "file")
            {
                var fid = data.node.id;
                $.ajax({
                    type: 'get',
                    dataType: 'json',
                    cache: false,
                    url: '/Project/OpenFile',
                    data: { id: fid },
                    success: function (response, textStatus, jqXHR) {
                        editor.setValue(response.content, 1);
                        $('#hiddenid').val(fid);
                        $('#hiddencode').val(response.content);
                    }
                });
            }
            else
            {
               // console.log('folder');
            }

        });
        // 8 interact with the tree - either way is OK
        $('button').on('click', function () {
            /*$('#jstree').jstree(true).select_node('child_node_1');
            $('#jstree').jstree('select_node', 'child_node_1');
            $.jstree.reference('#jstree').select_node('child_node_1');*/
        });

        $('#ace-form').on('submit', function () {
            var form = $(this);
            $.ajax({
                url: form.attr('action'),
                data: form.serialize(),
                method: 'POST',
                success: function (data) {
                    $("#saved").show();
                    setTimeout(function () { $("#saved").fadeOut(); }, 1500);
                }
            });
            return false;
        });

    });
</script>

@section scripts {
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>

    <script>
        $(function () {
            // Reference the hub
            var chat = $.connection.chatHub;
            editor.$blockScrolling = Infinity;

            var ignore;

            chat.client.updateEditor = function (changedata) {
                ignore = true;
                editor.getSession().getDocument().applyDelta(changedata);
                ignore = false;
            };

            chat.client.chatMessage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            
            // Hub
            $.connection.hub.start().done(function () {

                chat.server.joinChat($('#hiddenproject').val());
                chat.server.joinFile($('#hiddenid').val());

                // Change is detected and editor is updated.
                editor.on("change", function (obj) {
                    if (!ignore)
                    {
                        chat.server.updateEditor(obj, $('#hiddenid').val());
                        $('#hiddencode').val(editor.getValue());
                    }
                });

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.chatMessage($('#displayname').val(), $('#message').val(), $('#hiddenproject').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

            });
        });

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

    </script>
}
